{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkName": {
            "defaultValue": "we-demo-vnet",
            "type": "String",
            "metadata": {
                "description": "The name of the Virtual Network to Create"
            }
        },
        "subnetName": {
            "defaultValue": "Management",
            "type": "String",
            "metadata": {
                "description": "The name of the subnet created in the new VNET"
            }
        },
        "virtualNetworkResourceGroup": {
            "defaultValue": "Demo-Networking",
            "type": "String"
        },
        "adminUsername": {
            "defaultValue": "solvoit",
            "type": "String",
            "metadata": {
                "description": "The name of the Administrator of the new VM and Domain"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "The password for the Administrator account of the new VM and Domain"
            }
        },
        "vmName": {
            "defaultValue": "AZ-VM1",
            "type": "String"
        },
        "azVMSize": {
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_A1_v2",
                "Standard_A2_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS11_v2",
                "Standard_DS12_v2"
            ],
            "type": "String",
            "metadata": {
                "description": "The size of the VM Created"
            }
        },
        "imagePublisher": {
            "defaultValue": "MicrosoftWindowsServer",
            "type": "String",
            "metadata": {
                "description": "Image Publisher"
            }
        },
        "imageOffer": {
            "defaultValue": "WindowsServer",
            "type": "String",
            "metadata": {
                "description": "Image Offer"
            }
        },
        "imageSKU": {
            "defaultValue": "2016-Datacenter",
            "type": "String",
            "metadata": {
                "description": "Image SKU"
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Storage account type for the data disk"
            }
        },
        "timeStamp": {
            "type": "string"
        },
        "registrationKey": {
            "type": "securestring"
        },
        "registrationUrl": {
            "type": "string"
        }
    },
    "variables": {
        "modulesUrl": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
        "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
        "nodeConfigurationName": "ReplicaDC.localhost",
        "configurationMode": "ApplyAndMonitor",
        "configurationModeFrequencyMins": 15,
        "refreshFrequencyMins": 30,
        "rebootNodeIfNeeded": true,
        "actionAfterReboot": "ContinueConfiguration",
        "allowModuleOverwrite": false,
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('VnetID'),'/subnets/',parameters('subnetName'))]",
        "vm1NicName": "[concat(parameters('vmName'), '-nic')]",
        "ipApiVersion": "2016-11-01",
        "nrpApiVersion": "2016-10-01",
        "crpApiVersion": "2016-04-30-preview"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vm1NicName')]",
            "apiVersion": "[variables('nrpApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/disks",
            "name": "[concat(parameters('vmName'),'-data-disk1')]",
            "apiVersion": "[variables('crpApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "creationData": {
                    "createOption": "Empty"
                },
                "accountType": "[parameters('storageAccountType')]",
                "diskSizeGB": 32
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "apiVersion": "[variables('crpApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/disks/', parameters('vmName'), '-data-disk1')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('azVMSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'-os')]",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vmName'),'-data-disk1')]",
                            "lun": 0,
                            "createOption": "Attach",
                            "managedDisk": {
                                "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('vmName'),'-data-disk1'))]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm1NicName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'), '/Microsoft.Powershell.DSC')]",
            "apiVersion": "[variables('crpApiVersion')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.19",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[parameters('registrationKey')]"
                    }
                },
                "settings": {
                    "modulesUrl": "[variables('modulesUrl')]",
                    "SasToken": "",
                    "configurationFunction": "[variables('configurationFunction')]",
                    "properties": [
                        {
                            "name": "RegistrationKey",
                            "value": {
                                "userName": "PLACEHOLDER",
                                "password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "typeName": "System.Management.Automation.Credential"
                        },
                        {
                            "name": "RegistrationUrl",
                            "value": "[parameters('registrationUrl')]",
                            "typeName": "System.String"
                        },
                        {
                            "name": "NodeConfigurationName",
                            "value": "[variables('nodeConfigurationName')]",
                            "typeName": "System.String"
                        },
                        {
                            "name": "ConfigurationMode",
                            "value": "[variables('configurationMode')]",
                            "typeName": "System.String"
                        },
                        {
                            "name": "ConfigurationModeFrequencyMins",
                            "value": "[variables('configurationModeFrequencyMins')]",
                            "typeName": "System.Int32"
                        },
                        {
                            "name": "RefreshFrequencyMins",
                            "value": "[variables('refreshFrequencyMins')]",
                            "typeName": "System.Int32"
                        },
                        {
                            "name": "RebootNodeIfNeeded",
                            "value": "[variables('rebootNodeIfNeeded')]",
                            "typeName": "System.Boolean"
                        },
                        {
                            "name": "ActionAfterReboot",
                            "value": "[variables('actionAfterReboot')]",
                            "typeName": "System.String"
                        },
                        {
                            "name": "AllowModuleOverwrite",
                            "value": "[variables('allowModuleOverwrite')]",
                            "typeName": "System.Boolean"
                        },
                        {
                            "name": "Timestamp",
                            "value": "[parameters('timestamp')]",
                            "typeName": "System.String"
                        }
                    ]
                }
            }
        }
    ]
}